{"version":3,"sources":["arsec.js"],"names":[],"mappingsfile":"arsec.js","sourcesContent":["/**\r\n * WebSocket\r\n */\r\n\r\n//Change this to what suits you\r\nvar socket = io(websocketip);\r\nvar heart = laroute.route('heartbeat');\r\nvar heartrate = 30000;\r\n\r\n//Connect to websocket\r\nsocket.on('connect', function() {\r\n\tsocket.on('message', function (msg) {\r\n      console.log(msg);\r\n    });\r\n});\r\n\r\n/**\r\n * Tree Events\r\n */\r\n\r\nsocket.on(\"argue:App\\\\Events\\\\TreeEvents\\\\TreeSaved\", function(message)\r\n{\r\n\tif ( ! $('.argue-tree-container').length && !$('.argue-tree-vis').length ) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif ( $('.argue-tree-vis').length ) {\r\n\t\targueTreeVisRenderNode(message,'tree');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (message.tree.public == 0 && (message.tree.user_id != arsec.user.id) )  \r\n\t{\r\n\t\targueDeleteTree(message.tree.id);\r\n\t\t\r\n\t\ttoastr.info(message['tree'].updated_by.name + ' has hidden Assessment: '+message.tree.title);\r\n\t\t\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif (argueTreeExists(message.tree.id)) \r\n\t{\r\n\t\tvar tree = argueGetTreeByID(message.tree.id);\r\n\t\t\r\n\t\targueUpdateTree(message.tree.id);\r\n\t\t\r\n\t\tif (message.tree.locked == 1 && !tree.data('tree-locked')) {\r\n\t\t\ttoastr.info(message['tree'].updated_by.name + ' has locked Assessment: '+message.tree.title);\r\n\t\t} else {\r\n\t\t\ttoastr.info(message['tree'].updated_by.name + ' has unlocked Assessment: '+message.tree.title);\r\n\t\t}\r\n\t}\r\n\telse \r\n\t{\r\n\t\targueCreateTree(message.tree.id);\r\n\t\t\r\n\t\ttoastr.info(message['tree'].updated_by.name + ' has created Assessment: ' + message.tree.title);\r\n\t}\r\n});\r\n\r\nsocket.on(\"argue:App\\\\Events\\\\TreeEvents\\\\TreeDeleted\", function(message)\r\n{\r\n\tif (message.tree.public == 0 && (message.tree.user_id != arsec.user.id)) \r\n\t{\r\n\t\treturn false;\r\n\t}\r\n\r\n\tvar tree = $('.argue-tree').data('tree-id');\r\n\r\n\tif (tree == message.tree.id) {\r\n\t\talert(\"This tree has been deleted and you will be redirected to the assessment list\");\r\n\t\twindow.location = laroute.route('home');\r\n\t}\r\n\r\n\targueDeleteTree(message.tree.id);\r\n\r\n\ttoastr.info(message['tree'].updated_by.name + ' has deleted Assessment: ' + message.tree.title);\r\n});\r\n\r\n$('.argue-tree-action-delete-form').submit(function(event) \r\n{\r\n\tevent.preventDefault();\r\n\r\n\tvar tree = $(this).closest('.argue-tree').data('tree-id');\r\n\r\n\t$.ajax({\r\n        headers: { 'X-CSRF-Token' : $('meta[name=\"csrf-token\"]').attr('content') },\r\n\t\turl: laroute.route('tree.destroy', { tree: tree }),\r\n\t\tdata: {_method: 'delete'},\r\n\t\tmethod: 'POST'\r\n\t})\r\n\t.done(function() {\r\n\t\t$('.argue-tree-wrapper[data-tree-id=\"'+tree+'\"]').remove();\r\n\t})\r\n\t.fail(function(request, error, exception) {\r\n\t\ttoastr.error('Could not delete Assessment :(<br>A user might be editing a child node');\r\n\t});\r\n});\r\n\r\n/**\r\n * Risk Events\r\n */\r\nsocket.on(\"argue:App\\\\Events\\\\RiskEvents\\\\RiskSaved\", function(message)\r\n{\r\n\targueTreeVisRenderNode(message,'risk');\r\n});\r\n\r\nsocket.on(\"argue:App\\\\Events\\\\RiskEvents\\\\RiskDeleted\", function(message)\r\n{\r\n\targueTreeVisRemoveNode(message, 'risk');\r\n});\r\n\r\n/**\r\n * Attack Events\r\n */\r\nsocket.on(\"argue:App\\\\Events\\\\AttackEvents\\\\AttackSaved\", function(message)\r\n{\r\n\targueTreeVisRenderNode(message,'attack');\r\n});\r\n\r\nsocket.on(\"argue:App\\\\Events\\\\AttackEvents\\\\AttackDeleted\", function(message)\r\n{\r\n\targueTreeVisRemoveNode(message, 'attack');\r\n});\r\n\r\n/**\r\n * Defence Events\r\n */\r\nsocket.on(\"argue:App\\\\Events\\\\DefenceEvents\\\\DefenceSaved\", function(message)\r\n{\r\n\targueTreeVisRenderNode(message,'defence');\r\n});\r\n\r\nsocket.on(\"argue:App\\\\Events\\\\DefenceEvents\\\\DefenceDeleted\", function(message)\r\n{\r\n\targueTreeVisRemoveNode(message, 'defence');\r\n});\r\n\r\n//Close socket on leaving the page\r\n$(window).on('beforeunload', function()\r\n{\r\n    socket.close();\r\n});\r\n\r\n/**\r\n * Argue UI Manipulation - Tree View\r\n */\r\n\r\nfunction argueTreeExists(id)\r\n{\r\n\treturn !!argueGetTreeByID(id).length;\r\n}\r\n\r\nfunction argueGetTreeByID(id)\r\n{\r\n\treturn $('.argue-tree-wrapper[data-tree-id=\"'+id+'\"]');\r\n}\r\n\r\nfunction argueGetTreeId(tree)\r\n{\r\n\treturn tree.closest('.argue-tree').data('tree-id');\r\n}\r\n\r\nfunction argueCreateTree(id)\r\n{\r\n\t$.ajax({\r\n        headers: { 'X-CSRF-Token' : $('meta[name=\"csrf-token\"]').attr('content') },\r\n\t\turl: laroute.route('tree.ajax', { tree: id }),\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t.done(function(data) {\r\n\t\t$(\".argue-tree-container\").append(data);\r\n\t})\r\n\t.fail(function() {\r\n\t\ttoastr.error('Could not get new Assessment information :(');\r\n\t});\r\n\t\r\n}\r\n\r\nfunction argueDeleteTree(id)\r\n{\r\n\t$('.argue-tree-wrapper[data-tree-id=\"'+id+'\"]').remove();\r\n\t$('.site-menu-item[data-tree-id=\"'+id+'\"]').remove();\r\n}\r\n\r\nfunction argueUpdateTree(id)\r\n{\r\n\tvar ajax_args = {\r\n\t\theaders: { 'X-CSRF-Token' : $('meta[name=\"csrf-token\"]').attr('content') },\r\n\t\turl: laroute.route('tree.ajax', { tree: id }),\r\n\t\tmethod: 'GET'\r\n\t}\r\n\t$.ajax(ajax_args)\r\n\t.done(function(data) {\r\n\t\t$(argueGetTreeByID(id)).replaceWith(data);\r\n\t})\r\n\t.fail(function() {\r\n\t\ttoastr.error('Could not get updated Assessment information :(');\r\n\t});\r\n}\r\n\r\n/**\r\n * Tree Visualisation\r\n */\r\n\r\nfunction argueNodeExists(id,type)\r\n{\r\n\treturn !!argueNodeByID(id,type).length;\r\n}\r\n\r\nfunction argueNodeByID(id, type)\r\n{\r\n\treturn $('.argue-'+type+'-wrapper[data-'+type+'-id=\"'+id+'\"]');\r\n}\r\n\r\nfunction argueTreeVisRemoveNode(message, type)\r\n{\r\n\tvar container = $('.argue-tree-vis');\r\n\r\n\tif ( ! $(container).length ) return true;\r\n\r\n\tvar node = '.argue-' + type + '-wrapper[data-' + type + '-id=\"' + message[type].id +'\"';\r\n\tif ($(node).length) {\r\n\t\t$(node).each(function (i) {\r\n\t\t\tvar node_container = $(node).parent();\r\n\t\t\t$(this).remove();\r\n\t\t\tif ($(node_container).children().length == 0 ) {\r\n\t\t\t\t$(node_container).remove();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\ttoastr.info(message[type].updated_by.name + ' has deleted '+ type + ': '+message[type].title);\r\n\tupdateTags();\r\n\r\n}\r\n\r\nfunction argueTreeVisRenderNode(message, type)\r\n{\r\n\tvar container = $('.argue-tree-vis');\r\n\r\n\tif ( ! $(container).length ) return true;\r\n\r\n\tif (message.tree.id != $(container).data('tree-id')) return true;\r\n\r\n\tif (argueNodeExists(message[type].id,type)) {\r\n\t\tvar node = argueNodeByID(message[type].id,type);\r\n\t\tif (message[type].locked == 1 && !node.data(type+'-locked')) {\r\n\t\t\ttoastr.info(message[type].updated_by.name + ' has locked '+type+': '+message[type].title);\r\n\t\t\tif (message[type].updated_by.name == arsec.user.name) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t} else if (message[type].locked == 0 && node.data(type+'-locked')) {\r\n\t\t\ttoastr.info(message[type].updated_by.name + ' has unlocked '+type+': '+message[type].title);\r\n\t\t} else {\r\n\t\t\ttoastr.info(message[type].updated_by.name + ' has edited '+type+': '+message[type].title);\r\n\t\t}\r\n\t}\r\n\telse {\t\t\t\r\n\t\ttoastr.info(message[type].updated_by.name + ' has created '+type+': '+message[type].title);\r\n\t}\r\n\targueTreeVisRenderNodeAjax(message[type].id,type, message.parent);\r\n}\r\n\r\nfunction argueTreeVisRenderNodeAjax(id, type, parent)\r\n{\r\n\t//get Data\r\n\tvar parameters = {};\r\n\tparameters[type] = id;\r\n\t$.ajax({\r\n\t\theaders: { 'X-CSRF-Token' : $('meta[name=\"csrf-token\"]').attr('content') },\r\n\t\turl: laroute.route('node.ajax.'+type, parameters),\r\n\t\tmethod: 'GET'\r\n\t})\r\n\t//update tree\r\n\t.done(function(data) {\r\n\t\tvar node_selector = '.argue-'+type+'-wrapper[data-'+type+'-id='+id+']';\r\n\t\tif ($(node_selector).length) {\r\n\t\t\t$(node_selector).each(function(i, node) {\r\n\t\t\t\t$(this).replaceWith(data);\r\n\t\t\t});\r\n\t\t}\r\n\t\telse {\r\n\t\t\tif (parent.id.constructor !== Array) {\r\n\t\t\t\tparent.id = [parent.id];\r\n\t\t\t}\r\n\t\t\t$.each(parent.id, function(i, value) {\r\n\t\t\t\tvar parent_selector = '.argue-'+parent.type+'-wrapper[data-'+parent.type+'-id='+value+']';\r\n\t\t\t\tif ($(parent_selector).length) {\r\n\t\t\t\t\tif (! $(parent_selector).children('ul').length) {\r\n\t\t\t\t\t\t$(parent_selector).append('<ul></ul>');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar ul = $(parent_selector).children('ul');\r\n\t\t\t\t$(ul).append(data);\r\n\t\t\t});\r\n\t\t}\r\n\t\tupdateTags();\r\n\t})\r\n\t.fail(function() {\r\n\t\ttoastr.error('Could not get updated node information :(');\r\n\t});\r\n}\r\n\r\n$('.argue-tree-vis').on('click','.argue-node-description-toggle', function(event) { \r\n\tvar elem = $(this).closest('.argue-tree-vis-leaf');\r\n\tif ($(elem).hasClass('argue-node-description-open')) {\r\n\t\t$(elem).removeClass('argue-node-description-open');\r\n\t\t$(elem).find('.argue-node-body .node-description-wrapper').velocity(\"slideUp\", { duration: 300 });\r\n\t}\r\n\telse {\r\n\t\t$(elem).addClass('argue-node-description-open');\r\n\t\t$(elem).find('.argue-node-body .node-description-wrapper').velocity(\"slideDown\", { duration: 300 });\r\n\t}\r\n});\r\n\r\n$('.argue-tree-vis').on('click','.argue-node-notes-toggle', function(event) { \r\n\tvar elem = $(this).closest('.argue-tree-vis-leaf');\r\n\tif ($(elem).hasClass('argue-node-notes-open')) {\r\n\t\t$(elem).removeClass('argue-node-notes-open');\r\n\t\t$(elem).find('.argue-node-body .node-notes-wrapper').velocity(\"slideUp\", { duration: 300 });\r\n\t}\r\n\telse {\r\n\t\t$(elem).addClass('argue-node-notes-open');\r\n\t\t$(elem).find('.argue-node-body .node-notes-wrapper').velocity(\"slideDown\", { duration: 300 });\r\n\t}\r\n});\r\n\r\n$('.argue-tree-vis').on('click', '.argue-node-action-toggle', function(event) { \r\n\tvar elem = $(this);\r\n\tif ($(elem).hasClass('argue-node-buttons-open')) {\r\n\t\t$(elem).removeClass('argue-node-buttons-open');\r\n\t\t$(elem).closest('.argue-tree-vis-leaf').find('.argue-node-actions').velocity(\"slideUp\", { duration: 300 });\r\n\t}\r\n\telse {\r\n\t\t$(elem).addClass('argue-node-buttons-open');\r\n\t\t$(elem).closest('.argue-tree-vis-leaf').find('.argue-node-actions').velocity(\"slideDown\", { duration: 300 });\r\n\t}\r\n\tevent.stopPropagation();\r\n});\r\n\r\n$('.argue-tree-vis').on('click', '.argue-node-collapse-toggle', function(event) {collapseNode(event, this)});\r\n$('.argue-tree-vis').on('dblclick', '.argue-tree-vis-leaf', function(event) {collapseNode(event, this)});\r\n\r\n\r\n$('.argue-node-action-delete-form').submit(function(event) \r\n{\r\n\tevent.preventDefault();\r\n\r\n\tvar tree = $(this).closest('.argue-tree-vis-leaf');\r\n\tvar type = $(this).data('type');\r\n\tvar id = $(this).data('id');\r\n\tvar parameters = {};\r\n\tparameters[type] = id;\r\n\r\n\t$.ajax({\r\n        headers: { 'X-CSRF-Token' : $('meta[name=\"csrf-token\"]').attr('content') },\r\n\t\turl: laroute.route(type+'.destroy', parameters ),\r\n\t\tdata: {_method: 'delete'},\r\n\t\tmethod: 'POST'\r\n\t})\r\n\t.done(function() {\r\n\t})\r\n\t.fail(function(request, error, exception) {\r\n\t\ttoastr.error('Could not delete tree :(<br>A user might be editing a child node');\r\n\t});\r\n});\r\n\r\n$('.argue-tree-vis').on('click', '.argue-node-action', function(event) { \r\n\tevent.stopPropagation();\r\n});\r\n\r\nfunction collapseNode(event, target) { \r\n\tvar elem = $(target).closest('.argue-leaf-wrapper');\r\n\tif ($(elem).hasClass('argue-node-collapsed')) {\r\n\t\t$(elem).removeClass('argue-node-collapsed');\r\n\t\t$(elem).find('.argue-node-collapse-toggle').toggleClass('fa-minus').toggleClass('fa-plus');\r\n\t\t$(elem).children('.argue-leaf-children').velocity(\"slideDown\", { duration: 300 });\r\n\t}\r\n\telse {\r\n\t\t$(elem).addClass('argue-node-collapsed');\r\n\t\t$(elem).find('.argue-node-collapse-toggle').toggleClass('fa-minus').toggleClass('fa-plus');\r\n\t\t$(elem).children('.argue-leaf-children').velocity(\"slideUp\", { duration: 300 });\r\n\t}\r\n\tevent.stopPropagation();\r\n}\r\n\r\n/**\r\n * Span <-> Input switching\r\n */\r\n$('.argue-tree-vis').on(\"click\", '.input-switch > span', function() {\r\n\tvar leaf = $(this).closest('.argue-tree-vis-leaf');\r\n\tvar type = $(leaf).data('type');\r\n\tvar id = $(leaf).data(type+'-id');\r\n \tstartUpdate(id,type,this);  \t\r\n});\r\n$('.argue-tree-vis').on(\"blur\", '.input-switch > input', function() {\r\n\tvar leaf = $(this).closest('.argue-tree-vis-leaf');\r\n\tvar type = $(leaf).data('type');\r\n\tvar id = $(leaf).data(type+'-id');\r\n \tstopUpdate(id,type,this);  \t \t\r\n}).on('keydown', '.input-switch > input', function(e) {\r\n  if (e.which==13) {\r\n  \tvar leaf = $(this).closest('.argue-tree-vis-leaf');\r\n\tvar type = $(leaf).data('type');\r\n\tvar id = $(leaf).data(type+'-id');\r\n    e.preventDefault();\r\n \tstopUpdate(id,type,this);  \t \t\r\n  }\r\n});\r\n\r\nfunction startUpdate(id, type, element)\r\n{\r\n\t$.ajax({\r\n  \t\ttype: 'POST',\r\n\t\theaders: { 'X-CSRF-Token' : $('[name=\"csrf-token\"]').attr('content') },\r\n\t\tdataType: \"json\",\r\n\t\tdata: {\r\n\t\t\ttype: type,\r\n\t\t\tid: id\r\n\t\t},\r\n\t\turl: laroute.route('node.ajax.startUpdate')\r\n\t})\r\n\t.done(function() {\r\n\t\t$(element).hide().siblings(\"input\").val($(element).text()).show().focus().select();\r\n\t})\r\n\t.fail(function() {\r\n\r\n\t});\r\n}\r\n\r\nfunction stopUpdate(id, type, element)\r\n{\r\n\tshowLoader(element);\r\n\t$.ajax({\r\n  \t\ttype: 'POST',\r\n\t\theaders: { 'X-CSRF-Token' : $('[name=\"csrf-token\"]').attr('content') },\r\n\t\tdataType: \"json\",\r\n\t\tdata: {\r\n\t\t\ttype: type,\r\n\t\t\tid: id,\r\n\t\t\tfield: $(element).attr('name'),\r\n\t\t\tvalue: $(element).val()\r\n\t\t},\r\n\t\turl: laroute.route('node.ajax.stopUpdate')\r\n\t})\r\n \t.done(function() {\r\n\t\t$(element).hide().siblings(\"span\").text($(element).val()).show();\r\n\t})\r\n\t.fail(function() {\r\n\t\t$(element).hide().val($(element).siblings(\"span\").text()).siblings(\"span\").show();\r\n\t\ttoastr.error('Could not update Node :(<br>Try the edit page instead');\r\n\t})\r\n\t.always(function() {\r\n\t\thideLoader($(element));\r\n\t});\r\n\r\n}\r\n\r\nfunction showLoader(element)\r\n{\r\n\t$(element).closest('.input-switch').children('.loading').show();\r\n}\r\n\r\nfunction hideLoader(element)\r\n{\r\n\t$(element).closest('.input-switch').children('.loading').hide();\r\n}\r\n\r\n/**\r\n * Tags section\r\n */\r\n\r\nvar filters = [];\r\n\r\n$('body').on('click','.node-tag', function(event) {\r\n\tvar tag_id = $(this).data('tag-id');\r\n\t$('.site-menu-item-custom').each(function() {\r\n\t\tif ($(this).data('tag-id') == tag_id)\r\n\t\t\t$(this).toggleClass('site-menu-item-custom-selected');\r\n\t});\r\n\tfilterTag(tag_id);\r\n});\r\n\r\n$('.clear-filters').click(function(event) {\r\n\tclearFilters();\r\n});\r\n\r\nfunction filterTag(id)\r\n{\r\n\tif (filters.indexOf(id) == -1) filters.push(id);\r\n\telse filters.splice(filters.indexOf(id),1);\r\n\tfilterTags();\r\n}\r\n\r\nfunction clearFilters()\r\n{\r\n\tfilters = [];\r\n\t$('.site-menu-item-custom').removeClass('site-menu-item-custom-selected');\r\n\tfilterTags();\r\n}\r\n\r\nfunction updateTags()\r\n{\r\n\tvar tags = {};\r\n\tvar menu_tags = {};\r\n\t$('.argue-tree-vis-leaf').each(function() {\r\n\t\t$(this).find('.node-tag').each(function() {\r\n\t\t\tif (!tags.hasOwnProperty($(this).data('tag-id'))) tags[$(this).data('tag-id')]={slug: $(this).data('tag-slug'), text: $(this).text()};\r\n\t\t});\r\n\t});\r\n\r\n\t$('.site-menu .node-tag').each(function() {\r\n\t\tif (!$(this).data('tag-slug')) return true;\r\n\t\tmenu_tags[$(this).data('tag-id')]=$(this).data('tag-slug');\r\n\t});\r\n\r\n\tconsole.log(tags);\r\n\tconsole.log(menu_tags);\r\n\t$('.site-menu .node-tag').each(function() {\r\n\t\tif (!$(this).data('tag-slug')) return true;\r\n\t\tif (!($(this).data('tag-id') in tags)) {console.log(this); $(this).remove()};\r\n\t});\r\n\r\n\t$.each(tags, function(index, value) {\r\n\t\tif ( !(index in menu_tags)) {\r\n\t\t\tvar added=false;\r\n\t\t\t$('.site-menu .node-tag').each(function() {\r\n\t\t\t\tif (!$(this).data('tag-slug')) return true;\r\n\r\n\t\t\t\tif ($(this).data('tag-slug').localeCompare(value.slug) == 1 && !added) {\r\n\t\t\t\t\tvar newtag = $('.site-menu .empty-tag').clone();\r\n\t\t\t\t\t$(newtag).removeClass('empty-tag').insertBefore(this).data('tag-id', index).data('tag-slug',value.slug).find('.site-menu-title').text(value.text);\r\n\t\t\t\t\tadded=true;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (!added) {\r\n\t\t\t\tvar newtag = $('.site-menu .empty-tag').clone();\r\n\t\t\t\t$(newtag).removeClass('empty-tag').insertBefore($('.site-menu .empty-tag')).data('tag-id', index).data('tag-slug',value.slug).find('.site-menu-title').text(value.text);\r\n\t\t\t}\t\r\n\t\t}\r\n\t});\r\n\r\n}\r\n\r\nfunction filterTags()\r\n{\r\n\t$('.argue-tree-vis-leaf').each(function() {\r\n\t\t$(this).removeClass('filtered');\r\n\t\tvar filter = false;\r\n\t\tif ($(this).find('.node-tag').length == 0)\r\n\t\t{\r\n\t\t\tfor (var i = filters.length - 1; i >= 0; i--) {\r\n\t\t\t\tif (filters[i] == 0)\r\n\t\t\t\t{\r\n\t\t\t\t\tfilter = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$(this).find('.node-tag').each(function() {\r\n\t\t\t\tfor (var i = filters.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tif ($(this).data('tag-id') == filters[i])\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfilter = true;\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (filter) \r\n\t\t{\r\n\t\t\t$(this).addClass('filtered');\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/**\r\n * Heartbeat\r\n */\r\n\r\nfunction heartbeat()\r\n{\r\n\tvar data = null;\r\n\tif ( arsec.hasOwnProperty(\"model\") ) {\r\n\t\tdata = {\r\n\t\t\tarsec_update_id: arsec.model.id,\r\n\t\t\tarsec_update_type: arsec.model.type\r\n\t\t};\r\n\t}\r\n    $.ajax({ \r\n    \tdataType: \"json\",\r\n    \tdata: data,\r\n    \turl: heart\r\n    }).\r\n    always(function() {\r\n    \tsetTimeout( heartbeat, heartrate );\r\n    });\r\n}\r\nheartbeat();"],"sourceRoot":"/source/"}